@mixin responsive($breakpoint-min, $breakpoint-max: null) {
    @if ($breakpoint-max) {
        @if map-has-key($breakpoints, $breakpoint-min) and
            map-has-key($breakpoints, $breakpoint-max)
        {
            $breakpoint-min-value: map-get($breakpoints, $breakpoint-min);
            $breakpoint-max-value: map-get($breakpoints, $breakpoint-max);

            @media (min-width: $breakpoint-min-value) and (max-width: $breakpoint-max-value -1px) {
                @content;
            }
        }
    } @else {
        @if map-has-key($breakpoints, $breakpoint-min) {
            $breakpoint-min-value: map-get($breakpoints, $breakpoint-min);

            @media (min-width: $breakpoint-min-value) {
                @content;
            }
        }
    }
}

@mixin hxFont ($originSize, $modifier: 1, $font-weight: light) {
    font-size: (($originSize) * $modifier);
    @include Font-weight($font-weight)
}

@mixin Font-weight ($weight) {
    font-weight: map-get($weight-map, $weight)
}